<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rjButton2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>